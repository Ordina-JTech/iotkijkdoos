<?xml version="1.0" encoding="utf-8"?>

<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/content_fragment_light"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    app:layout_behavior="@string/appbar_scrolling_view_behavior"
    tools:context="nl.ordina.kijkdoos.LightFragment">

    <!--
       To ensure that your layout is flexible and adapts to different
       screen sizes, you should use "wrap_content" and "match_parent" for
       the width and height of some view components. If you use "wrap_content",
       the width or height of the view is set to the minimum size necessary
       to fit the content within that view, while "match_parent" (also known
       as "fill_parent" before API level 8) makes the component expand to
       match the size of its parent view.

       Use RelativeLayout
       You can construct fairly complex layouts using nested instances of LinearLayout and
       combinations of "wrap_content" and "match_parent" sizes. However, LinearLayout does
       not allow you to precisely control the spacial relationships of child views; views in
       a LinearLayout simply line up side-by-side. If you need child views to be oriented
       in variations other than a straight line, a better solution is often to use a
       RelativeLayout, which allows you to specify your layout in terms of the spacial
       relationships between components. For instance, you can align one child view on
       the left side and another view on the right side of the screen.

    -->

    <ToggleButton
        android:id="@+id/idTBLampLeftOn"
        android:text="ToggleButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="100dp"
        android:layout_marginLeft="50dp"
        android:textOff="@string/txtTBLampLeft"
        android:textOn="@string/txtTBLampLeft"/>

    <ToggleButton
        android:id="@+id/idTBLampRightOn"
        android:text="ToggleButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginRight="50dp"
        android:textOff="@string/txtTBLampRight"
        android:textOn="@string/txtTBLampRight"
        android:layout_alignTop="@+id/idTBLampLeftOn"
        android:layout_alignParentEnd="true" />

    <ToggleButton
        android:id="@+id/idTBLampLeftBlinkOn"
        android:text="ToggleButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginLeft="50dp"
        android:layout_below="@+id/idTBLampLeftOn"
        android:textOff="@string/txtTBLampBlink"
        android:textOn="@string/txtTBLampBlink" />

    <ToggleButton
        android:id="@+id/idTBLampRightBlinkOn"
        android:text="ToggleButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textOff="@string/txtTBLampBlink"
        android:textOn="@string/txtTBLampBlink"
        android:layout_below="@+id/idTBLampRightOn"
        android:layout_alignStart="@+id/idTBLampRightOn" />

    <ToggleButton
        android:id="@+id/idTBLampColorOn"
        android:text="ToggleButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="100dp"
        android:textOff="@string/txtTBLampColor"
        android:textOn="@string/txtTBLampColor"
        android:layout_below="@+id/idTBLampLeftBlinkOn"
        android:layout_centerHorizontal="true" />

    <ToggleButton
        android:id="@+id/idTBLampColorBlinkOn"
        android:text="ToggleButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textOff="@string/txtTBLampBlink"
        android:textOn="@string/txtTBLampBlink"
        android:layout_below="@+id/idTBLampColorOn"
        android:layout_alignStart="@+id/idTBLampColorOn" />

</RelativeLayout>